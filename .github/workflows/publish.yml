name: "publish"

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

# This is the example from the readme.
# On each push to the `release` branch it will create or update a GitHub release, build your app, and upload the artifacts to the release.

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-20.04,
                   #macos-latest,
                   windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: install frontend dependencies
        run: npm install

      - name: set artifacts
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          export TAURI_PRIVATE_KEY="${{ env.TAURI_PRIVATE_KEY}}"
          export TAURI_KEY_PASSWORD="${{ env.TAURI_PRIVATE_KEY_PASSWORD}}"

      - name: set artifacts
        if: matrix.platform == 'windows-latest'
        run: |
          $env:TAURI_PRIVATE_KEY="${{ env.TAURI_PRIVATE_KEY}}"
          $env:TAURI_KEY_PASSWORD="${{ env.TAURI_PRIVATE_KEY_PASSWORD}}"

      - name: Add Rust Env Variables
        run: echo "ENCRYPTION_KEY=${{ env.ENCRYPTION_KEY }}" >> ./src-tauri/.env

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: "App v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false